version: '3.8'

services: 

  django:

    container_name: water_flow_backend
    image: water_flow_backend:1.0.0
    build: .
    volumes: 
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports: 
      - "8000:8000"

    expose:
      - "8000"

    depends_on:
      - database
      - redis

    env_file: .env

    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

    networks:
      - network
    
  database:

    container_name: postgres
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
    ports:
      - "5430:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=America/Fortaleza
      - POSTGRES_INITDB_ARGS=--timezone=America/Fortaleza
    networks:
      - network

  celery_worker:

    build: .
    container_name: 'celery_worker'
    command: celery -A water_flow_backend worker --loglevel=info -n celery@waterflow --soft-time-limit=600
    volumes: 
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - database
      - redis
    env_file: .env
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DB_HOST=database
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=db+postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    networks:
      - network

  celery_beat:
  
    build: .
    container_name: 'celery_beat'
    command: celery -A water_flow_backend beat --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes: 
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - database
      - redis
    env_file: .env
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DB_HOST=database
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=db+postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    networks:
      - network


  redis:

    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - network

volumes:
  postgres_data:

networks:
  network:
    driver: bridge